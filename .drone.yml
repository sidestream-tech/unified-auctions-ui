kind: template
load: pipeline-builder.star
data:
  builds:
    # frontend:main and frontend:$MAIN_COMMIT_SHA
    - name: publish-frontend-merge-main
      repository: ghcr.io/sidestream-tech/auction-ui/frontend
      tags:
        - "main"
        - "${DRONE_COMMIT_SHA}"
      labels:
        - key: org.opencontainers.image.source
          value: https://github.com/sidestream-tech/auction-ui
      path_to_dockerfile: frontend/Dockerfile
      path_to_context: ./
      build_args:
        - key: PRODUCTION_DOMAIN
          value_from_secret: auction-ui/main.auction-ui.k8s.sidestream.tech/frontend/production_domain
        - key: INFURA_PROJECT_ID
          value_from_secret: auction-ui/main.auction-ui.k8s.sidestream.tech/frontend/infura_project_id
        - key: CONTACT_EMAIL
          value_from_secret: auction-ui/main.auction-ui.k8s.sidestream.tech/frontend/contact_email
        - key: STAGING_BANNER_URL
          value_from_secret: auction-ui/main.auction-ui.k8s.sidestream.tech/frontend/staging_banner_url
        - key: DEFAULT_ETHEREUM_NETWORK
          value_from_secret: auction-ui/main.auction-ui.k8s.sidestream.tech/frontend/default_etherum_network
      tags_to_cache_from:
        - "main"
      trigger:
        event:
          - push
        branch:
          - main

    # frontend no tag, just test production build
    - name: build-frontend-to-test-production-build
      repository: ghcr.io/sidestream-tech/auction-ui/frontend
      path_to_dockerfile: frontend/Dockerfile
      path_to_context: ./
      tags_to_cache_from:
        - "main"
      trigger:
        event:
          - pull_request

    # frontend:pr-$PULL_REQUEST_NUMBER
    - name: publish-frontend-on-pr-push
      target: development
      repository: ghcr.io/sidestream-tech/auction-ui/frontend
      tags:
        - "pr-${DRONE_PULL_REQUEST}"
      labels:
        - key: org.opencontainers.image.source
          value: https://github.com/sidestream-tech/auction-ui
      path_to_dockerfile: frontend/Dockerfile
      path_to_context: ./
      build_args:
        - key: PRODUCTION_DOMAIN
          value: "null.sidestream.tech"
        - key: INFURA_PROJECT_ID
          value: "key-not-provided"
        - key: CONTACT_EMAIL
          value: "development@sidestream.tech"
      tags_to_cache_from:
        - "main"
      trigger:
        event:
          - pull_request

    # frontend-makerdao:$RELEASE_TAG
    - name: publish-frontend-makerdao
      repository: ghcr.io/sidestream-tech/auction-ui/frontend-makerdao
      tags:
        - "${DRONE_TAG}"
      labels:
        - key: org.opencontainers.image.source
          value: https://github.com/sidestream-tech/auction-ui
      path_to_dockerfile: frontend/Dockerfile
      path_to_context: ./
      build_args:
        - key: PRODUCTION_DOMAIN
          value_from_secret: auction-ui/auctions.makerdao.network/frontend/production_domain
        - key: INFURA_PROJECT_ID
          value_from_secret: auction-ui/auctions.makerdao.network/frontend/infura_project_id
        - key: CONTACT_EMAIL
          value_from_secret: auction-ui/auctions.makerdao.network/frontend/contact_email
        - key: DEFAULT_ETHEREUM_NETWORK
          value_from_secret: auction-ui/main.auction-ui.k8s.sidestream.tech/frontend/default_etherum_network
      tags_to_cache_from:
        - "main"
      trigger:
        event:
          - tag

    # bot-twitter:main and frontend:$MAIN_COMMIT_SHA
    - name: publish-bot-twitter-merge-main
      repository: ghcr.io/sidestream-tech/auction-ui/bot-twitter
      tags:
        - "main"
        - "${DRONE_COMMIT_SHA}"
      labels:
        - key: org.opencontainers.image.source
          value: https://github.com/sidestream-tech/auction-ui
      path_to_dockerfile: bot-twitter/Dockerfile
      path_to_context: ./
      tags_to_cache_from:
        - "main"
      trigger:
        event:
          - push
        branch:
          - main

    # bot-twitter no tag, just test production build
    - name: build-bot-twitter-to-test-production-build
      repository: ghcr.io/sidestream-tech/auction-ui/bot-twitter
      path_to_dockerfile: bot-twitter/Dockerfile
      path_to_context: ./
      tags_to_cache_from:
        - "main"
      trigger:
        event:
          - pull_request

    # bot-twitter:$RELEASE_TAG
    - name: publish-bot-twitter-on-tag
      repository: ghcr.io/sidestream-tech/auction-ui/bot-twitter
      tags:
        - "${DRONE_TAG}"
      labels:
        - key: org.opencontainers.image.source
          value: https://github.com/sidestream-tech/auction-ui
      path_to_dockerfile: bot-twitter/Dockerfile
      path_to_context: ./
      tags_to_cache_from:
        - "main"
      trigger:
        event:
          - tag

    # bot-twitter:pr-$PULL_REQUEST_NUMBER
    - name: publish-bot-twitter-on-pr-push
      target: development
      repository: ghcr.io/sidestream-tech/auction-ui/bot-twitter
      tags:
        - "pr-${DRONE_PULL_REQUEST}"
      labels:
        - key: org.opencontainers.image.source
          value: https://github.com/sidestream-tech/auction-ui
      path_to_dockerfile: bot-twitter/Dockerfile
      path_to_context: ./
      tags_to_cache_from:
        - "main"
      trigger:
        event:
          - pull_request

  deployments_to_aws_eks:
    - name: deploy-main.auction-ui.k8s.sidestream.tech
      depends_on:
        - publish-bot-twitter-merge-main
        - publish-frontend-merge-main
      trigger:
        event:
          - push
        branch:
          - main
      settings:
        helm_root_path: kubernetes/helm
        aws_target_eks_cluster_name: eks-cluster-sidestream
        aws_ssm_path_to_base64_encoded_secrets_yaml: auction-ui/secrets.yaml
        value_files:
        - values.yaml
        - values.override_main.auction-ui.k8s.sidestream.tech.yaml
        target_namespace: "auction-ui-main"
        release_name: "auction-ui"
        values_to_set:
          - frontend.deployment.tag=$DRONE_COMMIT_SHA
          - botTwitter.deployment.tag=$DRONE_COMMIT_SHA

  in_development_image_pipelines:
    - name: core-lint-build
      type: kubernetes
      depends_on: [publish-frontend-on-pr-push]
      image: ghcr.io/sidestream-tech/auction-ui/frontend:pr-${DRONE_PULL_REQUEST}
      workdir: /core
      steps_parallel:
        - name: lint
          command: npm run lint
        - name: build
          command: npm run build
      trigger:
        event:
          - pull_request
    - name: frontend-lint-test
      type: kubernetes
      depends_on: [publish-frontend-on-pr-push]
      image: ghcr.io/sidestream-tech/auction-ui/frontend:pr-${DRONE_PULL_REQUEST}
      workdir: /frontend
      steps_parallel:
        - name: lint
          command: npm run lint
        - name: test
          command: npm run test
      trigger:
        event:
          - pull_request
    - name: bot-twitter-lint
      type: kubernetes
      depends_on: [publish-bot-twitter-on-pr-push]
      image: ghcr.io/sidestream-tech/auction-ui/bot-twitter:pr-${DRONE_PULL_REQUEST}
      workdir: /bot-twitter
      steps_parallel:
        - name: lint
          command: npm run lint
      trigger:
        event:
          - pull_request
